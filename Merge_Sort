// leetcode 912
public int[] sortArray(int[] nums) {
        merge_sort(nums, 0, nums.length-1);
        return nums;
    } 
    private void merge_sort(int [] nums, int l, int h)
    {
        if (l<h)
        {
            int mid = (l+h)/2;
            merge_sort(nums,l,mid);
            merge_sort(nums,mid+1,h);
            merge(l,h,mid,nums);
        }
    }
    private void merge(int low, int high, int mid, int [] arr)
    {
        ArrayList <Integer> extra = new ArrayList();
        int left = low;
        int right = mid+1;
        while(left<=mid && right<=high)
        {
            if (arr[left]<=arr[right])
            {
                extra.add(arr[left]);
                left++;
            }
            else
            {
                extra.add(arr[right]);
                right++;
            }
        }
        while (left<=mid)
        {
            extra.add(arr[left++]);
        }
        while (right<=high)
        {
            extra.add(arr[right++]);
        }
        for (int i=0; i<extra.size(); i++)
            arr[low+i] = extra.get(i);
    }
